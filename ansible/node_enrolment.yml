- hosts: localhost
  tasks:
    - name: Load state from file
      include_vars:
        file: "{{ state_file_path }}"
        name: tenks_state

    - name: Check that OpenStack credentials exist in the environment
      fail:
        msg: >
          $OS_USERNAME was not found in the environment. Ensure the OpenStack
          credentials exist in your environment, perhaps by sourcing your RC file.
      when: not lookup('env', 'OS_USERNAME')

    # This command will return the UUIDs, regardless of whether deploy_kernel
    # and deploy_ramdisk are image UUIDs or names.
    - name: Get OpenStack deployment image UUIDs
      command: >-
        '{{ virtualenv_path }}/bin/openstack' image show
          '{{ item }}' --format value --column id
      loop:
        - "{{ deploy_kernel }}"
        - "{{ deploy_ramdisk }}"
      # deploy_kernel/ramdisk default to none. We don't need to know them for
      # enrolment to continue.
      when: item is not none
      register: deploy_image_ids
      changed_when: false

    - name: Perform Ironic enrolment for each hypervisor's nodes
      include_role:
        name: ironic-enrolment
      vars:
        ironic_deploy_kernel_uuid: >-
          {{ deploy_image_ids.results.0.stdout | default(omit) }}
        ironic_deploy_ramdisk_uuid: >-
          {{ deploy_image_ids.results.1.stdout | default(omit) }}
        ironic_nodes: "{{ alloc.value.nodes }}"
        ironic_hypervisor: "{{ alloc.key }}"
        ironic_virtualenv_path: "{{ virtualenv_path }}"
        ironic_python_upper_constraints_url: >-
          {{ python_upper_constraints_url }}
      loop: "{{ query('dict', tenks_state) }}"
      loop_control:
        loop_var: alloc
