---
# Map physical network names to their source device. This can be either an
# existing interface or an existing bridge.
physnet_mappings: {}

system_requirements:
  - python-virtualenv

# Path to virtualenv used to install Python requirements. If a virtualenv does
# not exist at this location, one will be created.
virtualenv_path: "{{ '/'.join([ansible_env['HOME'], 'tenks-venv']) }}"

# Naming scheme for bridges created by tenks for physical networks is
# {{ bridge_prefix + i }}, where `i` is the index of the physical network in
# physnet_mappings (sorted alphabetically by key).
bridge_prefix: brtenks

# Prefix for all veth links.
veth_prefix: 'p-'

# Suffix for veth links attached to a Tenks OVS bridge.
veth_bridge_ovs_suffix: '-ovs'
# Suffix for veth links attached to a source Linux bridge.
veth_bridge_source_suffix: '-phy'

# Suffix for veth links attached to a Tenks OVS bridge.
veth_vm_ovs_suffix: '-ovs'
# Suffix for veth links attached to a VM. VMs aren't physical so '-phy' doesn't
# seem right.
veth_vm_source_suffix: '-tap'

# Directory in which to store Tenks logs.
log_directory: /var/log/tenks/

# The address on which VBMC will listen for IPMI traffic.
vbmc_ipmi_listen_address: 0.0.0.0
# The range of ports available for use by VBMC.
vbmc_ipmi_port_range_start: 6230
vbmc_ipmi_port_range_end: 6240
# The IPMI username that VBMC will use.
vbmc_ipmi_username: username
# The IPMI password that VBMC will use.
vbmc_ipmi_password: password

# The URL of the upper constraints file to pass to pip when installing Python
# packages.
python_upper_contraints_url: >-
  https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt
